{"version":3,"file":"static/js/489.b14d313e.chunk.js","mappings":"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","sources":["webpack://network-yarn/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://network-yarn/./src/components/Profile/My Posts/MyPosts.module.css?39ab","webpack://network-yarn/./src/components/Profile/My Posts/Post/Post.module.css?ec7d","components/Profile/My Posts/Post/Post.jsx","components/Profile/My Posts/MyPosts.jsx","components/Profile/My Posts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","webpack://network-yarn/./src/components/common/MyAvatar/MyAvatar.module.css?b00c","components/common/MyAvatar/MyAvatar.jsx","hoc/WithAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__-xkZW\",\"profile\":\"ProfileInfo_profile__F-WNQ\",\"aboutMe\":\"ProfileInfo_aboutMe__g1R8z\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatus = (props) => {\r\n    //useState - функция возващающая массив\r\n    //мы передайм нашим переменным начальное значение\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]\r\n        )\r\n    //при нажатии на текст статуса в editMode передаётся значение true и наш input становится активным\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    //здесь соответственно editMode присваивается значение false\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '___'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                           value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../asets/images/user.png\";\r\nimport solarFlare from \"../../../asets/images/solar-flare.en.jpg\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\n\r\nconst ProfileInfo = ({profile, updateStatus, status}) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src={solarFlare}\r\n                    alt=\"solar flare\"/>\r\n                </div>\r\n            <div className={s.profile}>\r\n                <div className={s.descriptionBlock}>\r\n                    <img src={profile.photos.large != null ? profile.photos.large : userPhoto} alt=\"avatar\"/>\r\n                    <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n                <div className={s.aboutMe}>\r\n                    <div>About me: {profile.aboutMe}</div>\r\n                    <div>Full name: {profile.fullName}</div>\r\n                    <div>My instagram: {profile.contacts.instagram}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postBlock\":\"MyPosts_postBlock__bOiOW\",\"posts\":\"MyPosts_posts__xFMN-\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__NmzkG\"};","import React from \"react\";\r\nimport s from './Post.module.css'\r\nimport MyAvatar from \"../../../common/MyAvatar/MyAvatar\";\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <MyAvatar/>\r\n            {props.message}\r\n            <div>\r\n                <span>{props.like} like</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n//создаём отдельную переменную за пределами формы, иначе будет зацикливание\r\nlet maxLength = maxLengthCreator(20);\r\n//component for form post\r\nconst MyPostsForm = (props) => {\r\n    return (//в качестве аргумента для form передаём через пропсы handleSubmit(\"обработчик отправки формы\")\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <div><Field placeholder={'Write already'} component={Textarea} name={'newPostElement'}\r\n                validate={[required, maxLength]}/></div>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>)\r\n}\r\n\r\n//оборачиваем нашу ComponentForm в reduxForm, необходимо дать её соотетствующее название\r\nconst MyPostReduxForm = reduxForm({form: 'ProfileAddMyPostForm'})(MyPostsForm)\r\n\r\nconst MyPosts = React.memo(props =>{\r\n    console.log('Render My Post');\r\n    let postsElements = [...props.posts].reverse().map(p => <Post message={p.post} key={p.id} like={p.like}/>)\r\n\r\n    //создаём callback функцию с параметром value, а value это объект.\r\n    const addNewPost = (value) => {\r\n        //properties у объекта value называются также как name у Field\r\n        //в функцию которая отправляет сообщение передаём наше сообщение в виде свойства\r\n        props.addPost(value.newPostElement);\r\n    }\r\n\r\n    return (<div className={s.postBlock}>\r\n        <div>\r\n            <h3>My post</h3>\r\n            {/*передаём нашей вышестоящей компоненте функцию,\r\n               она вызывается когда в компоненту приходит Submit\r\n                (т.е. когда нажали кнопку добавить сообщение*/}\r\n            <MyPostReduxForm onSubmit={addNewPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    </div>)\r\n})\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        // newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        //Добавляем параметр newMessageElement, в нём находится добавленное сообщение\r\n        addPost: (newPostElement) => dispatch(addPostActionCreator(newPostElement))\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./My Posts/MyPostsContainer\";\r\n\r\nconst Profile = ({profile, status, updateStatus}) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={profile} status={status} updateStatus={updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>)\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatusThunk, updateStatusThunk, profileThunkCreator, setUserProfile} from \"../../redux/profile-reducer\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport WithAuthRedirect from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nexport function withRouter(Children) {\r\n    return (props) => {\r\n        const match = {params: useParams()};\r\n        return <Children {...props} match={match}/>\r\n    }\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n        }\r\n        this.props.profileThunkCreator(userId);\r\n        this.props.getStatusThunk(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                        updateStatus={this.props.updateStatusThunk}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.authUser.userId,\r\n    isAuth: state.authUser.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfile, profileThunkCreator, getStatusThunk, updateStatusThunk}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer);","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"MyAvatar_avatar__I7pkD\"};","import React from \"react\";\r\nimport classes from './MyAvatar.module.css'\r\n\r\nconst MyAvatar = () => {\r\n    return (\r\n        <img className={classes.avatar} src=\"https://u.kanobu.ru/articles/pics/7e6dc974-43f4-4ad0-9a55-2465566e9662.jpg\"\r\n            alt=\"avatar\"/>\r\n    )\r\n}\r\n\r\nexport default MyAvatar;","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.authUser.isAuth\r\n})\r\n\r\nconst WithAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) {\r\n                return <Navigate to={'/login'}/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToPropsForRedirect) (RedirectComponent);// Димыч создал переменную и отдал ей это значение\r\n\r\n}\r\n\r\nexport default WithAuthRedirect;"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","src","solarFlare","alt","className","s","photos","large","userPhoto","aboutMe","fullName","contacts","instagram","Preloader","MyAvatar","message","like","maxLength","maxLengthCreator","MyPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","name","validate","required","React","console","log","postsElements","posts","reverse","map","p","post","id","addPost","newPostElement","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","withRouter","Children","match","params","useParams","ProfileContainer","userId","this","authUserId","profileThunkCreator","getStatusThunk","updateStatusThunk","compose","authUser","isAuth","setUserProfile","WithAuthRedirect","classes","mapStateToPropsForRedirect","Component","RedirectComponent","to"],"sourceRoot":""}